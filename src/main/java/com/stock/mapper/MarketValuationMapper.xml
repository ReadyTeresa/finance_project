<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stock.mapper.MarketValuationMapper" >
  <resultMap id="BaseResultMap" type="com.stock.pojo.MarketValuation" >
    <!-- <id column="value_id" property="valueId" jdbcType="INTEGER" /> -->
    <result column="stock_code" property="stockCode" jdbcType="VARCHAR" />
    <result column="stock_name" property="stockName" jdbcType="VARCHAR" />
    <result column="PE" property="pe" jdbcType="VARCHAR" />
    <result column="PE_predict12" property="pePredict12" jdbcType="VARCHAR" />
    <result column="PB" property="pb" jdbcType="VARCHAR" />
    <result column="PS" property="ps" jdbcType="VARCHAR" />
    <result column="dividend_rate12" property="dividendRate12" jdbcType="VARCHAR" />
    <result column="tatol_market_value" property="tatolMarketValue" jdbcType="VARCHAR" />
    <result column="flow_market_value" property="flowMarketValue" jdbcType="VARCHAR" />
    <result column="enterprise_value" property="enterpriseValue" jdbcType="VARCHAR" />
    <association property="stocktemp" javaType="com.stock.pojo.StockTemp">
    	<result column="current_price" property="currentPrice" jdbcType="VARCHAR" />
    	<result column="updown_ratio" property="updownRatio" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    value_id, stock_code, a.stock_name, PE, PE_predict12, PB, PS, dividend_rate12, tatol_market_value, 
    flow_market_value, enterprise_value
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stock.pojo.MarketValuationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_valuation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from market_valuation
    where value_id = #{valueId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from market_valuation
    where value_id = #{valueId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.pojo.MarketValuationExample" >
    delete from market_valuation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.pojo.MarketValuation" >
    insert into market_valuation (value_id, stock_code, stock_name, 
      PE, PE_predict12, PB, 
      PS, dividend_rate12, tatol_market_value, 
      flow_market_value, enterprise_value)
    values (#{valueId,jdbcType=INTEGER}, #{stockCode,jdbcType=VARCHAR}, #{stockName,jdbcType=VARCHAR}, 
      #{pe,jdbcType=VARCHAR}, #{pePredict12,jdbcType=VARCHAR}, #{pb,jdbcType=VARCHAR}, 
      #{ps,jdbcType=VARCHAR}, #{dividendRate12,jdbcType=VARCHAR}, #{tatolMarketValue,jdbcType=VARCHAR}, 
      #{flowMarketValue,jdbcType=VARCHAR}, #{enterpriseValue,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stock.pojo.MarketValuation" >
    insert into market_valuation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        value_id,
      </if>
      <if test="stockCode != null" >
        stock_code,
      </if>
      <if test="stockName != null" >
        stock_name,
      </if>
      <if test="pe != null" >
        PE,
      </if>
      <if test="pePredict12 != null" >
        PE_predict12,
      </if>
      <if test="pb != null" >
        PB,
      </if>
      <if test="ps != null" >
        PS,
      </if>
      <if test="dividendRate12 != null" >
        dividend_rate12,
      </if>
      <if test="tatolMarketValue != null" >
        tatol_market_value,
      </if>
      <if test="flowMarketValue != null" >
        flow_market_value,
      </if>
      <if test="enterpriseValue != null" >
        enterprise_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        #{valueId,jdbcType=INTEGER},
      </if>
      <if test="stockCode != null" >
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="pe != null" >
        #{pe,jdbcType=VARCHAR},
      </if>
      <if test="pePredict12 != null" >
        #{pePredict12,jdbcType=VARCHAR},
      </if>
      <if test="pb != null" >
        #{pb,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        #{ps,jdbcType=VARCHAR},
      </if>
      <if test="dividendRate12 != null" >
        #{dividendRate12,jdbcType=VARCHAR},
      </if>
      <if test="tatolMarketValue != null" >
        #{tatolMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="flowMarketValue != null" >
        #{flowMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseValue != null" >
        #{enterpriseValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.pojo.MarketValuationExample" resultType="java.lang.Integer" >
    select count(*) from market_valuation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update market_valuation
    <set >
      <if test="record.valueId != null" >
        value_id = #{record.valueId,jdbcType=INTEGER},
      </if>
      <if test="record.stockCode != null" >
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null" >
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.pe != null" >
        PE = #{record.pe,jdbcType=VARCHAR},
      </if>
      <if test="record.pePredict12 != null" >
        PE_predict12 = #{record.pePredict12,jdbcType=VARCHAR},
      </if>
      <if test="record.pb != null" >
        PB = #{record.pb,jdbcType=VARCHAR},
      </if>
      <if test="record.ps != null" >
        PS = #{record.ps,jdbcType=VARCHAR},
      </if>
      <if test="record.dividendRate12 != null" >
        dividend_rate12 = #{record.dividendRate12,jdbcType=VARCHAR},
      </if>
      <if test="record.tatolMarketValue != null" >
        tatol_market_value = #{record.tatolMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="record.flowMarketValue != null" >
        flow_market_value = #{record.flowMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseValue != null" >
        enterprise_value = #{record.enterpriseValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update market_valuation
    set value_id = #{record.valueId,jdbcType=INTEGER},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      PE = #{record.pe,jdbcType=VARCHAR},
      PE_predict12 = #{record.pePredict12,jdbcType=VARCHAR},
      PB = #{record.pb,jdbcType=VARCHAR},
      PS = #{record.ps,jdbcType=VARCHAR},
      dividend_rate12 = #{record.dividendRate12,jdbcType=VARCHAR},
      tatol_market_value = #{record.tatolMarketValue,jdbcType=VARCHAR},
      flow_market_value = #{record.flowMarketValue,jdbcType=VARCHAR},
      enterprise_value = #{record.enterpriseValue,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.pojo.MarketValuation" >
    update market_valuation
    <set >
      <if test="stockCode != null" >
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="pe != null" >
        PE = #{pe,jdbcType=VARCHAR},
      </if>
      <if test="pePredict12 != null" >
        PE_predict12 = #{pePredict12,jdbcType=VARCHAR},
      </if>
      <if test="pb != null" >
        PB = #{pb,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        PS = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="dividendRate12 != null" >
        dividend_rate12 = #{dividendRate12,jdbcType=VARCHAR},
      </if>
      <if test="tatolMarketValue != null" >
        tatol_market_value = #{tatolMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="flowMarketValue != null" >
        flow_market_value = #{flowMarketValue,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseValue != null" >
        enterprise_value = #{enterpriseValue,jdbcType=VARCHAR},
      </if>
    </set>
    where value_id = #{valueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.pojo.MarketValuation" >
    update market_valuation
    set stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      PE = #{pe,jdbcType=VARCHAR},
      PE_predict12 = #{pePredict12,jdbcType=VARCHAR},
      PB = #{pb,jdbcType=VARCHAR},
      PS = #{ps,jdbcType=VARCHAR},
      dividend_rate12 = #{dividendRate12,jdbcType=VARCHAR},
      tatol_market_value = #{tatolMarketValue,jdbcType=VARCHAR},
      flow_market_value = #{flowMarketValue,jdbcType=VARCHAR},
      enterprise_value = #{enterpriseValue,jdbcType=VARCHAR}
    where value_id = #{valueId,jdbcType=INTEGER}
  </update>
  
  <select id="selectOrderAllMarketValue" resultMap="BaseResultMap">
  	select *
  	from market_valuation
  </select>
  
  <select id="selectOrderbyPE" resultMap="BaseResultMap" >
		
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(PE AS DECIMAL ) asc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyPB" resultMap="BaseResultMap" >
		
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(PB AS DECIMAL ) desc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyPS" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(PS AS DECIMAL ) desc
		limit #{start},#{pagesize}
  </select>
  
   <select id="selectOrderbyTotalValue" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(tatol_market_value AS DECIMAL(14,4) ) desc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyFlowValue" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(flow_market_value AS DECIMAL(14,4) ) desc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyEnterpValue" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(enterprise_value AS DECIMAL(14,4) ) desc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyPredictValue" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(PE_predict12 AS DECIMAL(14,4) ) desc
		limit #{start},#{pagesize}
  </select>
  
  <select id="selectOrderbyDividendRate" resultMap="BaseResultMap" >
	select 
		*
		from market_valuation a,stock_temp b
		where SUBSTR(a.stock_code,1,6)=b.stock_num
		order by CAST(dividend_rate12 AS DECIMAL(14,4) ) desc
		limit #{start},#{pagesize}
  </select>
</mapper>